<div class="left-side" id="myScrollspy">

    <ul class="nav nav-pills">
        <li><a href="#summary">支付系統</a></li>
        <li><a href="#environment">IAP 開發設定</a></li>
        <li><a href="#pay">付款與上傳訂單</a></li>
        <li><a href="#checkOrder">查詢訂單</a></li>
        <li><a href="#restoreOrder">恢復購買</a></li>
    </ul>

</div>

<div class="right-side">

    <section id="summary">
        <h1>支付系統</h1>
        <p>購買遊戲內購商品（IAP）成功後，必須上傳商品訂單，用作後台統計。</p>
    </section>

    <section id="environment">
        <h1>IAP 開發設定</h1>
        <p>使用 IAP 相關功能前，請確認於 AndroidManifest.xml 設置所需的 meta-data。</p>
        <div class="code-block"><%- include ../code/java-sdk-metadata.html -%></div>
        <ul>
            <li>
                <b>Base64PublicKey</b>：只有使用 Google IAP 的時候才需要設定此參數。
                （關於 Google IAP 使用，請參考
                <a href="https://developer.android.com/google/play/billing/index.html" target="_blank">
                    Google 開發者文件的詳細説明
                </a>）
            </li>
        </ul>
    </section>

    <section id="pay">
        <h1>付款與上傳訂單</h1>

        <span class="badge badge-ttl">函式</span>
        <p>
            <pre>void pay(SgSDKPayRequest req)</pre>
        </p>

        <span class="badge badge-ttl">説明</span>
        <ul>
            <li>購買遊戲內付費商品並上傳商品數據。</li>
            <li>
                使用 Google IAP 時，呼叫此函式 SDK 會自動 init Google IAP（只有第一次），並且於付款成功之後，
                自動 conume 商品（Google IAP 對於 concumable 的需求）。
            </li>
        </ul>

        <span class="badge badge-ttl">參數</span>
        <ul>
            <li>
                <a href="/webapi-init#SGPayRequest"><b>SGPayRequest</b></a>: 付款參數的資料結構。
            </li>
        </ul>

        <span class="badge badge-ttl">回傳</span>
        <ul>
            <li>請參看【<a href="/java-init#listener">回調監聽</a>】的設定，以及回傳的代碼與定義<a href="/webapi-init#section5">對照表</a>。</li>
            <li>
                回調監聽的 Data 參數： <a href="/webapi-init#SGPayResponse"><b>SGPayResponse</b></a>
            </li>
        </ul>

    </section>

    <section id="checkOrder">
        <h1>查詢訂單</h1>

        <span class="badge badge-ttl">函式</span>
        <pre>void getOrder(String orderId, String gameKey, String openId, String sign)</pre>

        <span class="badge badge-ttl">説明</span>
        <p>購買成功後，查詢訂單詳細內容。</p>

        <span class="badge badge-ttl">參數</span>
        <ul>
            <li><b>orderId </b>: 購買時傳入的訂單編號。</li>
            <li><b>gameKey </b>: 您的開發驗證。</li>
            <li><b>openId </b>: SG 會員 ID。</li>
            <li><b>sign </b>: 購買成功後，SG Server產生的簽名。</li>
        </ul>

        <span class="badge badge-ttl">回傳</span>
        <ul>
            <li>請參看【<a href="/java-init#listener">回調監聽</a>】的設定，以及回傳的代碼與定義<a href="/webapi-init#section5">對照表</a>。</li>
            <li>
                回調監聽的 Data 參數：<a href="/webapi-init#SGPayResponse"><b>SGPayResponse</b></a>
            </li>
        </ul>
    </section>

    <section id="restoreOrder">
        <h1>恢復購買</h1>

        <span class="badge badge-ttl">函式</span>
        <pre>void restorePurchasedItems()</pre>

        <span class="badge badge-ttl">説明</span>
        <p>
            基本上，開發者不需要呼叫此函式。只有當 Google IAP 付款成功但卻 consume 失敗 <code>Code:1174</code> 之後，
            可以呼叫此函式，consume 所有尚未 consume 的訂單。
        </p>

        <span class="badge badge-ttl">回傳</span>
        <ul>
            <li>請參看【<a href="/java-init#listener">回調監聽</a>】的設定，以及回傳的代碼與定義<a href="/webapi-init#section5">對照表</a>。</li>
            <li>回調監聽的 Data 參數：無。</li>
        </ul>

    </section>


</div>