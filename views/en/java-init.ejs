<div class="left-side" id="myScrollspy">

    <ul class="nav nav-pills">
        <li><a href="#summary">Introduction</a></li>
        <li><a href="#environment">Development Environment</a></li>
        <li><a href="#import">Using SGSDK</a></li>
        <li><a href="#init">Initialization</a></li>
        <li><a href="#lifecycle">SDK Lifecycle Events</a></li>
        <li><a href="#listener">SDK Callback Listener</a></li>
    </ul>

</div>

<div class="right-side">

    <section id="summary">
        <h1>Introduction</h1>
        <p>
            SG Android SDK allows you to connect to SG backend services easily using Java.
        </p>
        <p>
            It's important for you to read through and understand the document before starting development.
        </p>
    </section>

    <section id="environment">
        <h1>Development Environment</h1>
        <h3>1.Minimum Android version requirement:</h3>
        <p>SGSDK requires minimum <b>Android version 4.4 (KitKat, API Level 19)</b> to run.  We recommend Android Studio as your main development environment.</p>
        <img src=<%= "assets/img/" + lang + "/pic05.png"%> class="img-responsive"/>
        <br />

        <h3>2.Download SGSDK Android Library File</h3>
        <ul>
            <li><a href="/sdk/android/SGSDK.aar">Download (SGSDK.AAR) here</a></li>
        </ul>
        <br />
        
        <h3>3.Sample App</h3>
        <ul>
            <li>To understand how to use SGSDK, please refer to
                <a href="https://github.com/SGMoxyStudios/SGSDK-Android-Sample" target="_blank"> sample app on GitHub</a>.
                
            </li>
        </ul>
        <br />

        <h3>4.SGSDK permissions</h3>
        <ul>
            <li>SGSDK.AAR will request following App permissions automatically:</li>
        </ul>
        <%- include ../code/java-user-permission.html -%>

    </section>

    <section id="import">
        <h1>Using SGSDK</h1>
        <h3>1.Import SDK</h3>
        <ul>
            <li>From Android Studio: <b>File > New Module</b></li>
            <li>Select <b>Import .JAR/.AAR Package</b> and then click <b>Next</b></li>
            <li>
                Enter the location of <b>SGSDK.AAR</b> then click <b>Finish</b>.
            </li>
            <li>
                Make sure ':SGSDK' is in <b>settings.gradle</b> file, as shown here: 
                <pre><code class="js">include ':app', ':SGSDK'</code></pre>
            </li>
            <li>
                Make sure ':SGSDK' is in <b>build.gradle</b> dependencies, as shown here: 
                <pre><code class="js">dependencies { compile project(":SGSDK") }</code></pre>
            </li>
        </ul>

        <br />

        <h3>2.Other reference materials</h3>
        <ul>
            <li>
                <a href="https://developer.android.com/studio/projects/android-library.html#AddDependency" target="_blank">
                    Google Android development documents
                </a>
            </li>
            <li>
                YouTube video
                <br />
                <div style="position: relative; width:100%; padding-bottom:56%">
                    <iframe style="position: absolute;top: 0; left: 0;width:100%;height:100%;" src="https://www.youtube.com/embed/dpuJPoXkFG4?ecver=1" frameborder="0" allowfullscreen></iframe>
                </div>
            </li>
        </ul>

    </section>

    <section id="init">
        <h1>Initialization</h1>

        <h3>1.Before initialization</h3>
        <p>
            Please add following <code>meta-data</code> setting in <b>AndroidManifest.xml</b> before initializing SGSDK functions:
        </p>
        <%- include ../code/java-sdk-metadata.html -%>
        <ul>
            <li>
                <b>SDKChannel (required)</b>：SDK channel setting.
                （<a href="/channel">Please refer to Channel List table</a>）
            </li>
            <li>
                <b>Base64PublicKey</b>：Only required when using Google IAP service.
                (Please refer to
                <a href="https://developer.android.com/google/play/billing/index.html" target="_blank">
                    Google In-app Billing development document
                </a>)
            </li>
        </ul>
        <br />

        <h3>2.SDK initialization</h3>

        <span class="badge badge-ttl">Function</span>
        <pre>void init(Context ctx, String gameKey, String appSecret)</pre>

        <span class="badge badge-ttl">Description</span>
        <ul>
            <li>Initialize SDK.  You need to call init() function before you can continue any other functions. </li>
        </ul>

        <span class="badge badge-ttl">Sample</span>
        <p>You should call <code>init()</code> functions inside <b>Activity</b> <code>onCreate()</code> event.</p>
        <div class="code-block"><%- include ../code/java-sdk-init.html -%></div>

        <span class="badge badge-ttl">Parameters</span>
        <ul>
            <li><b>Context</b>: Activity object. </li>
            <li>You can obtain <b>GameKey</b>、<b>AppSecret</b> from <a href="http://dashboard.smartgamesltd.com">SG Developer</a> console.
            </li>
        </ul>

        <span class="badge badge-ttl">Response</span>
        <ul>
            <li>
                Please refer to 【<a href="#listener">SDK Callback Listener</a>】
                and 【<a href="/webapi-init#section5">Response Code Definition</a>】for more detail.
            </li>
            <li>Listener result data: NULL. </li>
        </ul>


    </section>

    <section id="lifecycle">
        <h1>SDK Lifecycle Events</h1>
        <p>SGSDK has its own lifecycle events.  Please follow sample codes below to invoke SDK lifecycle event functions related to the <b>Activity</b> lifecycle events:
        </p>
        <%- include ../code/java-sdk-lifecycle.html -%>
        <ul>
            <li>
                Special note on <b>onBackPressed()</b>:
                <br /><br />
                Certain SDK functions launch <b>WebView</b> control as part of the process flow.  SDK itself needs to handle the Back button when <b>WebView</b> is appeared.
                In the main Activity <code>onBackPressed()</code> event, you should check return value of <code>_sdk.onBackPressed()</code>, and decide if <code>super.onBackPressed()</code> should be called.  
            </li>
        </ul>
    </section>

    <section id="listener">
        <h1>SDK Callback Listener</h1>
        <p> In order to get the result of SDK asynchronized functions, you need to setup a Listener to handle the response data.  Here is the sample:
        </p>
        <%- include ../code/java-sdk-listener.html -%>
        <ul>
            <li>SDK returns result through <a href="/webapi-init#SGListenerResult"><b>SGListenerResult</b></a> object, which contains three members: <code>Code</code>，<code>Message</code> 和 <code>Data</code>.
              Based on different situation, <code>Data</code> might return NULL or object.  Please refer to each function for more detail.
            </li>
            <li>For code and message, refer to 【<a href="/webapi-init#section5">Response Code Definition</a>】for more detail.</li>
        </ul>
    </section>

</div>