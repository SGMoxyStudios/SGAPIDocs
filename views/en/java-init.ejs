<div class="left-side" id="myScrollspy">

    <ul class="nav nav-pills">
        <li><a href="#summary">Android 集成指南</a></li>
        <li><a href="#environment">開發環境設定</a></li>
        <li><a href="#import">引用 SGSDK</a></li>
        <li><a href="#init">SGSDK 初始化</a></li>
        <li><a href="#lifecycle">SGSDK 生命周期事件</a></li>
        <li><a href="#listener">SGSDK 回調監聽</a></li>
    </ul>

</div>

<div class="right-side">

    <section id="summary">
        <h1>Android 集成指南</h1>
        <p>
            通過本文的介紹可以了解 Android SDK 客戶端接入的整個流程。
            在接入之前請仔細閱讀本文檔，以減少接入過程中遇到的問題。
        </p>
    </section>

    <section id="environment">
        <h1>開發環境設定</h1>
        <h3>SGSDK 支援版本 : </h3>
        <p>SGSDK 支援 Android 最低版本為 4.4 (KitKat, API Level 19)</p>
        <img src=<%= "assets/img/" + lang + "/pic05.png"%> class="img-responsive"/>
        <br />

        <h3>下載 SGSDK Android Library File</h3>
        <p><a href="/sdk/android/SGSDK.aar">SGSDK Android Library File (SGSDK.AAR) 下載</a></p>
        <br />
        
        <h3>SGSDK.AAR 會自動引用的權限 </h3>
        <%- include ../code/java-user-permission.html -%>

    </section>

    <section id="import">
        <h1>引用 SGSDK.AAR</h1>
        <h3>基本引用步驟</h3>
        <ul>
            <li>從選單 <b>File > New Module</b></li>
            <li>選擇 <b>Import .JAR/.AAR Package</b> 之後選 <b>Next</b></li>
            <li>輸入 <b>SGSDK.AAR</b> 路徑，然後按 <b>Finish</b>.</li>
            <li>
                確認 <b>settings.gradle</b> 檔案顯示如下：
                <pre><code class="js">include ':app', ':SGSDK'</code></pre>
            </li>
            <li>
                確認 <b>build.gradle</b> 的 dependencies 檔案顯示如下：
                <pre><code class="js">dependencies { compile project(":SGSDK") }</code></pre>
            </li>
        </ul>

        <br />

        <h3>其他參考資料</h3>
        <ul>
            <li>
                <a href="https://developer.android.com/studio/projects/android-library.html#AddDependency" target="_blank">
                    Google 開發者文件的詳細説明
                </a>
            </li>
            <li>
                YouTube 參考範例
                <br />
                <div style="position: relative; width:100%; padding-bottom:56%">
                    <iframe style="position: absolute;top: 0; left: 0;width:100%;height:100%;" src="https://www.youtube.com/embed/dpuJPoXkFG4?ecver=1" frameborder="0" allowfullscreen></iframe>
                </div>
            </li>
        </ul>

    </section>

    <section id="init">
        <h1>SGSDK 初始化</h1>

        <h3>使用之前</h3>
        <p>開始使用 SGSDK 之前，請確認於 AndroidManifest.xml 設置 SDK所需的 meta-data。</p>
        <%- include ../code/java-sdk-metadata.html -%>
        <ul>
            <li>
                <b>SDKChannel</b>：SDK 渠道設定。此參數為必設。
                （<a target="_blank" href="/channel">渠道列表請參看此連結</a>）
            </li>
            <li>
                <b>Base64PublicKey</b>：只有當使用 Google IAP 的時候才需要設定此參數。
                （關於 Google IAP 使用，請參考
                <a href="https://developer.android.com/google/play/billing/index.html" target="_blank">
                    Google 開發者文件的詳細説明
                </a>）
            </li>
        </ul>
        <br />

        <h3>初始化函式</h3>

        <span class="badge badge-ttl">函式</span>
        <pre>void init(Context ctx, String gameKey, String appSecret)</pre>

        <span class="badge badge-ttl">説明</span>
        <ul>
            <li>調用 SG Game API 之前需要先調用 init 接口，進行初始化。</li>
        </ul>

        <span class="badge badge-ttl">範例</span>
        <p>在主 Activity 的 onCreate 方法中，對 SGSDK 進行初始化。</p>
        <div class="code-block"><%- include ../code/java-sdk-init.html -%></div>

        <span class="badge badge-ttl">參數</span>
        <ul>
            <li>Context 為 App 的 Activity 物件。</li>
            <li>GameKey、AppSecret 可以在 <a target="_blank" href="http://dashboard.smartgamesltd.com">SG Developer</a> 申請開通遊戲後取。</li>
        </ul>

        <span class="badge badge-ttl">回傳</span>
        <ul>
            <li>請參看【<a href="/java-init#listener">回調監聽</a>】的設定，以及回傳的代碼與定義<a href="/webapi-init#section5">對照表</a>。</li>
            <li>回調監聽的 Data 參數：無。</li>
        </ul>
        

    </section>

    <section id="lifecycle">
        <h1>SGSDK 生命周期事件</h1>
        <p>請參照如下，在主 APP 的生命周期事件裏，呼叫 SGSDK 對應的生命周期函式。</p>
        <%- include ../code/java-sdk-lifecycle.html -%>
        <ul>
            <li>
                <b>onBackPressed()</b> 特別説明：
                由於 SDK 有許多函式藉由開啓 WebView 來運作，當裝置的返回鍵觸發時，
                <code>_sdk.onBackPressed()</code> 會回傳 boolean，請依照 true 或 false 來決定需不需要呼叫 base 的 <code>super.onBackPressed()</code>。
            </li>
        </ul>
    </section>

    <section id="listener">
        <h1>SGSDK 回調監聽</h1>
        <p>SGSDK 所有非同步的函式，都透過回調監聽來得到結果。範例如下：</p>
        <%- include ../code/java-sdk-listener.html -%>
        <ul>
            <li>
                <a href="/webapi-init#SGListenerResult"><b>SGListenerResult</b></a>
                的物件包含三個變數，分別透過 <code>Code</code>，<code>Message</code> 和 <code>Data</code> 來取得。
                data 會根據不同狀況，回傳不同物件。
            </li>
            <li>完整的回傳代碼與定義，<a href="/webapi-init#section5">請參看對照表</a>。</li>
        </ul>
    </section>

</div>