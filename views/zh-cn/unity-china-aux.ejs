<div class="left-side" id="myScrollspy">

    <ul class="nav nav-pills">
        <li><a href="#summary">辅助系统</a></li>
        <li><a href="#init">初始化</a></li>
        <li><a href="#startgame">开始游戏</a></li>
        <li><a href="#stopgame">结束游戏</a></li>
        <li><a href="#log">远程日志</a></li>
        <li><a href="#getlogvalue">获取远程日志键值</a></li>
        <li><a href="#getextmethodlist">获取扩展方法列表</a></li>
        <li><a href="#runextmethod">运行扩展方法</a></li>
        <li><a href="#sharescreen">截屏分享</a></li>
        <li><a href="#onfuncrequest">底层向应用发出的功能请求</a></li>
    </ul>

</div>

<div class="right-side">

    <section id="summary">
        <h1>辅助系统</h1>
        <p>SGUtil For Unity 的辅助系统提供了下列方法供应用使用。</p>
    </section>

    <section id="init">
        <h1>初始化</h1>
        <div class="row">
            <div class="col-sm-9">
                <span class="badge badge-ttl">方法</span>
                <p><pre>void Init(string params, bool autoDeliverProduct)</pre></p>

        		<span class="badge badge-ttl">参数</span>
        		<ul>
		            <li>params - 初始化参数字符串。必须是用'&'连接的“name=value”系列，其中必须包含
                        gameServerClass和location。gameServerClass为游服类的路径，而location目前必须为"beijing"。
                        CP可根据自己的业务来追加其他参数。这些参数会被转换成Map<String, String>的形式并你传递给游服类的
                        init方法。关于游服接口的细节请参看
					<a href=<%= "assets/html/" + lang + "/android/jdoc/sgutil/com/sg/util/SGGameServerInterface.html"%>> SGGameServerInterface </a>。</li>
                    <li>autoDeliverProduct - 指定在用户购买某商品（道具）并且购买的 UI 操作成功后，是否自动查询订单的状态，并在支付成功的情况下把商品（道具）标记为
                    已发货。如果这个参数为 false，那么您需要在购买 UI 操作成功后通过用户的后续操作或其他手段在合适的时机发起查询。
                    在自动查询期间不能执行其他功能，如果不希望有这种限制，请将其设置为false并手动调用GetOrderState来查询。</li>
				</ul>

                <span class="badge badge-ttl">说明</span>
                <ul>
                    <li>初始化 SGUtil For Unity。</li>
                    <li>初始化结果通过回调 OnInit 来通知给调用者。</li>
                </ul>

            </div>
            <div class="col-sm-3">
                <!--<span class="badge badge-ttl">WebView 頁面</span>
                <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                </a>-->
            </div>
        </div>
    </section>

    <section id="InitCallback">
        <h1>初始化结果回调</h1>
        <div class="row">
            <div class="col-sm-9">
                <span class="badge badge-ttl">方法</span>
                <p><pre>void OnInit(SGUResult resultCode)</pre></p>

                <span class="badge badge-ttl">参数</span>
                <ul>
                    <li>resultCode - 结果码</li>
                </ul>

                <span class="badge badge-ttl">说明</span>
                <ul>
                    <li>如果初始化失败，则后续一切操作都不能进行，也不能再次尝试初始化。</li>
                </ul>
            </div>
            <div class="col-sm-3">
                <!--<span class="badge badge-ttl">WebView 頁面</span>
                <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                </a>-->
            </div>
        </div>
    </section>

    <section id="startgame">
        <h1>开始游戏</h1>
        <div class="row">
            <div class="col-sm-9">
                <span class="badge badge-ttl">方法</span>
                <p><pre>void StartGame()</pre></p>

        		<span class="badge badge-ttl">参数</span>
        		<ul>
				</ul>

                <span class="badge badge-ttl">说明</span>
                <ul>
                    <li>此API异步调用游服接口的startGame()。</li>
                    <li>结果通过回调 OnStartGame 来通知给调用者。</li>
                </ul>
            </div>
            <div class="col-sm-3">
                <!--<span class="badge badge-ttl">WebView 頁面</span>
                <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                </a>-->
            </div>
        </div>
    </section>

    <section id="StartGameCallback">
        <h1>开始游戏结果回调</h1>
        <div class="row">
            <div class="col-sm-9">
                <span class="badge badge-ttl">方法</span>
                <p><pre>void OnStartGame(SGUResult resultCode)</pre></p>

                <span class="badge badge-ttl">参数</span>
                <ul>
                    <li>resultCode - 结果码</li>
                </ul>

                <span class="badge badge-ttl">说明</span>
                <ul>
                </ul>
            </div>
            <div class="col-sm-3">
                <!--<span class="badge badge-ttl">WebView 頁面</span>
                <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                </a>-->
            </div>
        </div>
    </section>
    
    <section id="stopgame">
        <h1>结束游戏</h1>
        <div class="row">
            <div class="col-sm-9">
                <span class="badge badge-ttl">方法</span>
                <p><pre>void StopGame()</pre></p>

        		<span class="badge badge-ttl">参数</span>
        		<ul>
				</ul>

                <span class="badge badge-ttl">说明</span>
                <ul>
                    <li>此API异步调用游服接口的stopGame()。</li>
                    <li>结果通过回调 OnStopGame 来通知给调用者。</li>
                </ul>
            </div>
            <div class="col-sm-3">
                <!--<span class="badge badge-ttl">WebView 頁面</span>
                <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                </a>-->
            </div>
        </div>
    </section>

    <section id="StopGameCallback">
        <h1>结束游戏结果回调</h1>
        <div class="row">
            <div class="col-sm-9">
                <span class="badge badge-ttl">方法</span>
                <p><pre>void OnStopGame(SGUResult resultCode)</pre></p>

                <span class="badge badge-ttl">参数</span>
                <ul>
                    <li>resultCode - 结果码</li>
                </ul>

                <span class="badge badge-ttl">说明</span>
                <ul>
                </ul>
            </div>
            <div class="col-sm-3">
                <!--<span class="badge badge-ttl">WebView 頁面</span>
                <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                </a>-->
            </div>
        </div>
    </section>

    <section id="log">
        <h1>远程日志</h1>
        <div class="row">
            <div class="col-sm-9">
                <span class="badge badge-ttl">方法</span>
                <p><pre>void Log(int action, string key, int value, string message)</pre></p>

        		<span class="badge badge-ttl">参数</span>
        		<ul>
                    <li>action - 动作码。参看<a href=<%= "assets/html/" + lang + "/android/jdoc/sgutil/com/sg/util/SGGameServerInterface.html#log-char-java.lang.String-int-java.lang.String-boolean-"%>> SGGameServerInterface.log </a>。</li>
                    <li>key - 该日志对应的键名，null表示没有键名</li>
                    <li>value - 该日志对应的键值</li>
                    <li>message - 日志内容</li>
				</ul>

                <span class="badge badge-ttl">说明</span>
                <ul>
                    <li>此API异步调用游服接口的log()。</li>
                    <li>具体效果取决于游服和游服接口的实现。</li>
                    <li>结果通过回调 OnRemoteLog 来通知给调用者。</li>
                </ul>
            </div>
            <div class="col-sm-3">
                <!--<span class="badge badge-ttl">WebView 頁面</span>
                <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                </a>-->
            </div>
        </div>
    </section>

    <section id="LogCallback">
        <h1>远程日志结果回调</h1>
        <div class="row">
            <div class="col-sm-9">
                <span class="badge badge-ttl">方法</span>
                <p><pre>void OnRemoteLog(SGUResult resultCode)</pre></p>

                <span class="badge badge-ttl">参数</span>
                <ul>
                    <li>resultCode - 结果码</li>
                </ul>

                <span class="badge badge-ttl">说明</span>
                <ul>
                </ul>
            </div>
            <div class="col-sm-3">
                <!--<span class="badge badge-ttl">WebView 頁面</span>
                <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                </a>-->
            </div>
        </div>
    </section>

    <section id="getlogvalue">
            <h1>获取远程日志键值</h1>
            <div class="row">
                <div class="col-sm-9">
                    <span class="badge badge-ttl">方法</span>
                    <p><pre>void GetLogValue(string key, int default_value)</pre></p>
    
                    <span class="badge badge-ttl">参数</span>
                    <ul>
                        <li>key - 键名</li>
                        <li>default_value - 未发现或出错时返回该值</li>
                    </ul>
    
                    <span class="badge badge-ttl">说明</span>
                    <ul>
                        <li>此API异步调用游服接口的getLogValue()。</li>
                        <li>具体效果取决于游服和游服接口的实现。</li>
                        <li>结果通过回调 OnRemoteLogValue 来通知给调用者。</li>
                    </ul>
                </div>
                <div class="col-sm-3">
                    <!--<span class="badge badge-ttl">WebView 頁面</span>
                    <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                    <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                    </a>-->
                </div>
            </div>
        </section>
    
        <section id="GetLogValueCallback">
            <h1>获取远程日志键值结果回调</h1>
            <div class="row">
                <div class="col-sm-9">
                    <span class="badge badge-ttl">方法</span>
                    <p><pre>void OnRemoteLogValue(SGUResult resultCode, string key, int value, string msg)</pre></p>
    
                    <span class="badge badge-ttl">参数</span>
                    <ul>
                        <li>resultCode - 结果码</li>
                        <li>name - 键名</li>
                        <li>value - 值</li>
                        <li>msg - 日志的文本内容</li>
                    </ul>
    
                    <span class="badge badge-ttl">说明</span>
                    <ul>
                    </ul>
                </div>
                <div class="col-sm-3">
                    <!--<span class="badge badge-ttl">WebView 頁面</span>
                    <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                    <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                    </a>-->
                </div>
            </div>
        </section>

        <section id="getextmethodlist">
            <h1>获取扩展方法列表</h1>
            <div class="row">
                <div class="col-sm-9">
                    <span class="badge badge-ttl">方法</span>
                    <p><pre>List&lt;SGUExtMethod&gt; GetExtMethodList()</pre></p>
    
                    <span class="badge badge-ttl">参数</span>
                    <ul>
                    </ul>
    
                    <span class="badge badge-ttl">说明</span>
                    <ul>
                        <li>此API返回渠道SDK的扩展方法列表。因为各个渠道的实现不同，方法列表也不同。但方法getChannelName是统一实现的，可以
                            用来根据具体渠道做不同的处理。
                        </li>
                    </ul>
                </div>
                <div class="col-sm-3">
                    <!--<span class="badge badge-ttl">WebView 頁面</span>
                    <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                    <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                    </a>-->
                </div>
            </div>
        </section>
        
        <section id="runextmethod">
                <h1>运行扩展方法</h1>
                <div class="row">
                    <div class="col-sm-9">
                        <span class="badge badge-ttl">方法</span>
                        <p><pre>SGUExtMethodReturn RunExtMethod(string name, string cmd_line_args)</pre></p>
        
                        <span class="badge badge-ttl">参数</span>
                        <ul>
                            <li>name - 方法的名字</li>
                            <li>cmd_line_args - 方法的命令行。方法的所有参数都是字符串，必须用空格连接。如果参数内部
                                有空格，则必须用引号(")括起来。
                            </li>
                        </ul>
        
                        <span class="badge badge-ttl">说明</span>
                        <ul>
                            <li>参看<a href=<%= "assets/html/" + lang + "/android/jdoc/sgutil/com/sg/util/SGAgent.html#runExtMethod-java.lang.String-"%>> SGAgent.runExtMethod </a>。</li></li>
                            <li>API调用结果将通过返回值来通知调用者。如果是异步方法，则后续处理的结果将通过回调 OnExtMethod 来通知给调用者。</li>
                        </ul>
                    </div>
                    <div class="col-sm-3">
                        <!--<span class="badge badge-ttl">WebView 頁面</span>
                        <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                        <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                        </a>-->
                    </div>
                </div>
            </section>
        
        <section id="RunExtMethodCallback">
            <h1>运行扩展方法结果回调</h1>
            <div class="row">
                <div class="col-sm-9">
                    <span class="badge badge-ttl">方法</span>
                    <p><pre>void OnExtMethod(SGUResult resultCode, SGUExtMethodResult result)</pre></p>
    
                    <span class="badge badge-ttl">参数</span>
                    <ul>
                        <li>resultCode - 结果码</li>
                        <li>result - 结果</li>
                    </ul>
    
                    <span class="badge badge-ttl">说明</span>
                    <ul>
                        <li>異步擴展方法的真正處理結果將通過此回調通知。此時resultCode為RESULT_ITEM，
                            詳細結果信息保存在result中。
                        </li>
                    </ul>
                </div>
                <div class="col-sm-3">
                    <!--<span class="badge badge-ttl">WebView 頁面</span>
                    <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                    <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                    </a>-->
                </div>
            </div>
        </section>

        <section id="sharescreen">
            <h1>截屏分享</h1>
            <div class="row">
                <div class="col-sm-9">
                    <span class="badge badge-ttl">方法</span>
                    <p><pre>void ShareScreen(string filepath, string title, string content)</pre></p>
    
                    <span class="badge badge-ttl">参数</span>
                    <ul>
                        <li>filepath - 截屏图像文件绝对路径</li>
                        <li>title - 标题</li>
                        <li>content - 内容</li>
                    </ul>
    
                    <span class="badge badge-ttl">说明</span>
                    <ul>
                        <li>此API异步调用渠道的分享接口来实现图片分享。</li>
                        <li>结果通过回调 OnShareScreen 来通知给调用者。</li>
                    </ul>
                </div>
                <div class="col-sm-3">
                    <!--<span class="badge badge-ttl">WebView 頁面</span>
                    <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                    <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                    </a>-->
                </div>
            </div>
        </section>
    
        <section id="ShareScreenCallback">
            <h1>截屏分享结果回调</h1>
            <div class="row">
                <div class="col-sm-9">
                    <span class="badge badge-ttl">方法</span>
                    <p><pre>void OnScreenShare(SGUResult resultCode, string path)</pre></p>
    
                    <span class="badge badge-ttl">参数</span>
                    <ul>
                        <li>resultCode - 结果码</li>
                        <li>path - 被分享的图像文件的路径</li>
                    </ul>
    
                    <span class="badge badge-ttl">说明</span>
                    <ul>
                        <li>应用可用这里的path参数来删除临时创建的图像文件。</li>
                    </ul>
                </div>
                <div class="col-sm-3">
                    <!--<span class="badge badge-ttl">WebView 頁面</span>
                    <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                    <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                    </a>-->
                </div>
            </div>
        </section>

        <section id="onfuncrequest">
            <h1>底层向应用发出的功能请求</h1>
            <div class="row">
                <div class="col-sm-9">
                    <span class="badge badge-ttl">方法</span>
                    <p><pre>void OnFuncRequest(SGUResult resultCode, string func, string id, string arg)</pre></p>
    
                    <span class="badge badge-ttl">参数</span>
                    <ul>
                        <li>resultCode - RESULT_FUNC_REQUEST</li>
                        <li>func - 功能名（"screenshot"、"logout"之一）</li>
                        <li>id - 功能ID，用于区分并发请求</li>
                        <li>arg - 请求参数，对于"screenshot"，为希望将图像保存至的文件路径</li>
                    </ul>
    
                    <span class="badge badge-ttl">说明</span>
                    <ul>
                        <li>不同于其他的回调在应用调用某API后由底层向上返回结果，此回调由底层在需要时首先向应用发起。</li>
                    </ul>
                </div>
                <div class="col-sm-3">
                    <!--<span class="badge badge-ttl">WebView 頁面</span>
                    <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                    <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                    </a>-->
                </div>
            </div>
        </section>

        <section id="notifyfuncrequestresult">
            <h1>请求功能完成通知</h1>
            <div class="row">
                <div class="col-sm-9">
                    <span class="badge badge-ttl">方法</span>
                    <p><pre>void NotifyFuncRequestResult(string func, string id, string result)</pre></p>
    
                    <span class="badge badge-ttl">参数</span>
                    <ul>
                        <li>func - 请求的功能名</li>
                        <li>id - 请求的功能id</li>
                        <li>result - 请求完成的结果（"succeeded"、"failed"、"cancelled"之一）</li>
                    </ul>
    
                    <span class="badge badge-ttl">说明</span>
                    <ul>
                        <li>此API系在收到底层的功能请求并执行后告知底层请求执行的结果。</li>
                    </ul>
                </div>
                <div class="col-sm-3">
                    <!--<span class="badge badge-ttl">WebView 頁面</span>
                    <a href="<%= " assets/img/" + lang + "/pic07.png" %>" data-toggle="lightbox">
                    <img src="<%= " assets/img/" + lang + "/pic07.png" %>" class="img-responsive"/>
                    </a>-->
                </div>
            </div>
        </section>


</div>
