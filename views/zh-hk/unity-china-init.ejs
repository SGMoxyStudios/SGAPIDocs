<style type="text/css">
pre > div { color:red; font-weight: bold }
pre > span { color:red; font-weight: bold }
</style>

<div class="left-side" id="myScrollspy">

    <ul class="nav nav-pills">
        <li><a href="#summary">Unity 集成指南</a></li>
        <li><a href="#environment">開發環境設定</a></li>
        <li><a href="#content">SGUtil For Unity 包內容說明</a></li>
        <li><a href="#use">使用 SGUtil For Unity</a></li>
        <li><a href="#repackage">重新打包</a></li>
        <li><a href="#customize">定製介面</a></li>
    </ul>

</div>

<div class="right-side">

    <section id="summary">
        <h1>Unity 集成指南</h1>
        <p>
            本頁總體介紹 SGUtil For Unity 的接入流程和使用中的注意點。在接入之前請仔細閱讀本文檔，以減少接入過程中遇到的問題。
        </p>
    </section>

    <section id="environment">
        <h1>開發環境設定</h1>
        <h3>1. 下載 SGUtil For Unity 包</h3>
        <ul>
            <li><a href="/sdk/unity/sgutil.unitypackage">sgutil.unitypackage</a></li>
        </ul>
        <br />

        <h3>2. 導入 SGUtil For Unity 包</h3>
        <p>選擇“Assets”菜單 &rarr; “Import Package” &rarr; “Custom Package”，選擇剛纔下載的SGUtil For Unity 包。</p>
        <img src=<%= "assets/img/" + "zh-cn" + "/unity_cn/sd_import_package.png"%> class="img-responsive"/>
        <br />

        <p>Unity 會顯示包中的檔案列表。</p>
        <img src=<%= "assets/img/" + "zh-cn" + "/unity_cn/sd_package_content.png"%> class="img-responsive"/>
		<br/>

		<p>點擊“Import”導入。</p>

        <h3>3. 示例程式</h3>
		<p>下面是 SGUtil For Unity 包中的 SGUCallbackEntityObject.cs 的內容，供參考。</p>
        <%- include ../code/unity-china-sgutil-sample-obj.html -%>

    </section>

    <section id="content">

        <h1>SGUtil For Unity 包內容說明</h1>
        <h3>1. 目錄結構</h3>
		<p>SGUtil For Unity 包導入後的目錄結構如下。</p>

		<pre>
Plugins\Android\AndroidManifest.xml
	Android 應用的 Manifest 檔案
Plugins\Android\bin\SGUtil_Context.jar
	SGUtil 與 Unity 的介面類
Plugins\Android\libs\SGUtil.aar
	SGUtil 軟件包
Plugins\Android\libs\SGUtil_GameServer.jar
	模擬遊服實現
Plugins\Android\libs\android-support-v4.jar
	Android 支持庫第 4 版
Plugins\Android\res\drawable-hdpi\sg_logo.png
	SG Studios 的商標
Plugins\Android\res\drawable-ldpi\sg_logo.png
	SG Studios 的商標
Plugins\Android\res\drawable-mdpi\sg_logo.png
	SG Studios 的商標
Plugins\Android\res\drawable-xhdpi\sg_logo.png
	SG Studios 的商標
Plugins\Android\res\drawable-xxhdpi\sg_logo.png
	SG Studios 的商標
Plugins\Android\res\drawable-xxxhdpi\sg_logo.png
	SG Studios 的商標
Plugins\Android\res\values\strings.xml
	字符串資源
Plugins\MiniJSON.cs
	簡易 Json 解析程式

Scripts\SDK\SGU.cs
	提供 SGUtil 功能介面的封裝
Scripts\SDK\SGUCallback.cs
	接收 SGUtil_Context 發起的回調，並把回調參數從 Json 轉換成數據實例，然後轉給回調實現
Scripts\SDK\SGUCallbackEntity.cs
	回調實現的介面定義
Scripts\SDK\SGUInterface.cs
	Unity 調用 SGUtil 功能的介面定義（抽象類）
Scripts\SDK\SGUInterfaceAndroid.cs
	Android 上的調用 SGUtil 功能的介面實現
Scripts\SDK\SGUInterfaceDefault.cs
	預設的調用 SGUtil 功能的介面實現（未實現）
Scripts\SDK\SGUInterfaceIOS.cs
	iOS 上的調用 SGUtil 功能的介面實現（未實現）
Scripts\SG\SGUCallbackEntityObject.cs
	SGUtil 回調實現示例</pre>

    </section>

    <section id="use">

        <h1>使用 SGUtil For Unity</h1>
        <h3>1. AndroidManifest.xml 定製</h3>
		<p>以下 AndroidManifest.xml 中藍色部分以外可視需要修改。</p>

		<pre>
&lt;manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.sg.util.unitydemo"
    android:versionCode="1"
    android:versionName="1.0" &gt;

    &lt;uses-sdk
        android:minSdkVersion="18"
        android:maxSdkVersion="25"
        android:targetSdkVersion="23" /&gt;

    &lt;uses-permission android:name="android.permission.INTERNET" /&gt;
    &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /&gt;
    &lt;uses-permission android:name="android.permission.ACCESS_WIFI_STATE" /&gt;
    &lt;uses-permission android:name="android.permission.WAKE_LOCK" /&gt;

    &lt;application
        android:allowBackup="true"
        android:icon="@drawable/sg_logo"
        android:label="@string/sgutil_unitydemo"
        android:name="<span style="color:blue">com.sg.util.SGApplication</span>"&gt;
        
        &lt;activity
            android:name="<span style="color:blue">com.sg.util.SGUtilUnityContext</span>"
            android:label="@string/sgutil_unitydemo" 
            android:screenOrientation="landscape"
            android:launchMode="singleTask"
            android:configChanges="orientation|keyboardHidden|screenSize"&gt;
            
            &lt;intent-filter&gt;
                &lt;action android:name="android.intent.action.MAIN" /&gt;
                &lt;category android:name="android.intent.category.LAUNCHER" /&gt;
            &lt;/intent-filter&gt;            
            
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</pre>

		<p>如果要針對 Android 6.0 以上版本使用動態權限申請，請自行擴展 SGUtilUnityContext.java，並重新生成 SGUtil_Context.jar。</p>

        <h3>2. 使用 SGUtil For Unity 的要點</h3>

        <p>上文講到 SGU.cs 提供了 SGUtil 功能介面的封裝，但是調用這些功能後會有回調把處理結果異步通知上來。
		所以必須有一個對象來接收這些結果，以便做出適當的處理。而爲了接收這些結果，我們就需要創建一個實現了
		SGUCallbackEntity 介面對象，並在初始化時作爲參數傳給 SGU。這個對象必須在 Unity 應用啓動時第一
		時間得到運行，而且一直存在。
		</p>

        <p>我們以 SGUCallbackEntityObject 爲例作簡單的說明。</p>

		<pre>
public class SGUCallbackEntityObject : MonoBehaviour, SGUCallbackEntity {

    void Start () {
        SGU.initialize(this);	// SGU class initialization
        // call Init interface
        SGU.Init("com.sg.util.SGUtilUnityGameServer", false);
    }
</pre>

        <p>SGUCallbackEntityObject 除了繼承 MonoBahaviour 外，還繼承了 SGUCallbackEntity，以便實現 SGUCallbackEntity 介面中的所有方法。它在
		啓動時首先調用 SGU.initialize 來對 SGU 類進行初始化，然後調用 SGU.Init 來爲使用 SGUtil For Unity 進行初始化。</p>

        <p>SGU.initialize 的參數是一個 SGUCallbackEntity 的實例，所以將 this 傳過去。</p>

        <p>SGU.Init 的第一個參數是一個遊服介面對象，這裏使用的 "com.sg.util.SGUtilUnityGameServer" 是一個演示實現。關於遊服介面的細節請參看
		<a href=<%= "assets/html/" + lang + "/android/jdoc/sgutil/com/sg/util/SGGameServerInterface.html"%>> SGGameServerInterface </a>。SGU.Init
		的第二個參數指定在用戶購買某商品（道具）並且購買的 UI 操作成功後，是否自動查詢訂單的狀態，並在支付成功的情況下把商品（道具）標記爲
		已發貨。如果這個參數爲 false，那麼您需要在購買 UI 操作成功後通過用戶的後續操作或其他手段在合適的時機發起查詢。
		</p>

    </section>

    <section id="repackage">

        <h1>重新打包</h1>

		<p>您接入 SGUtil For Android 後，使用 Unity 開發環境可以打包出 APK 檔案，並可以在 Android 設備上運行。但是這個 APK 中只有
		SGUtil 內置的模擬渠道。要想真正地綁定某個具體渠道，請將 APK 寄給 SG Studios，SG Studios 會對您的應用做測試，並將打包了指定渠道後的新
		APK 檔案寄回。渠道相關的介紹參見 <a href=<%= "/java-china-init"%>> Android 集成指南 </a>。
		</p>

	</section>

    <section id="customize">

        <h1>定製介面</h1>

		<p>下面我們列出了 SGUtil 與 Unity 的介面類以及演示用遊服介面的源代碼。您可以在此基礎上進行修改定製。</p>

        <%- include ../code/unity-china-sgutil-context.html -%>
		<br/>
        <%- include ../code/unity-china-sgutil-player.html -%>
		<br/>
        <%- include ../code/unity-china-sgutil-gameserver.html -%>

	</section>

</div>
